import { useState } from "react";
import Head from "next/head";

import styles from "../styles/Home.module.css";
import useIdentity from "../hooks/useIdentity";
import type { BasicProfile } from "@ceramicstudio/idx-constants";

// BasicProfile = {
//   name?: string;
//   image?: ImageSources;
//   description?: string;
//   emoji?: string;
//   background?: ImageSources;
//   birthDate?: string;
//   url?: string;
//   gender?: string;
//   homeLocation?: string;
//   residenceCountry?: string;
//   nationalities?: Array<string>;
//   affiliations?: Array<string>;
// };

const Home = () => {
  const { loading, profile, error, read, write } = useIdentity();
  const [profileData, setProfileData] = useState<BasicProfile>(null);

  const readProfile = async () => {
    const { error, data } = await read();
    if (error === undefined) {
      setProfileData(data);
    }
  };

  const updateProfile = async () => {
    const { error, data } = await write(profileData);
    if (error === undefined) {
      setProfileData(data);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <div className={styles.wrapper}>
          <button className={styles.button} onClick={readProfile}>
            Read Profile
          </button>

          {loading.read && <p className={styles.description}>Reading...</p>}
          {loading.write && <p className={styles.description}>Updating...</p>}

          <pre>{JSON.stringify(error)}</pre>
          <pre>{JSON.stringify(profile)}</pre>

          {profile !== null && (
            <div className={styles.form}>
              <div className={styles.field}>
                <label htmlFor="">Name</label>
                <input
                  type="text"
                  value={profileData?.name}
                  onChange={(e) =>
                    setProfileData({ ...profileData, name: e.target.value })
                  }
                />
              </div>
              <div className={styles.field}>
                <label htmlFor="">Bio</label>
                <input
                  type="text"
                  value={profileData?.description}
                  onChange={(e) =>
                    setProfileData({
                      ...profileData,
                      description: e.target.value,
                    })
                  }
                />
              </div>
              <div className={styles.field}>
                <label htmlFor="">Gender</label>
                <input
                  type="text"
                  value={profileData?.gender}
                  onChange={(e) =>
                    setProfileData({
                      ...profileData,
                      gender: e.target.value,
                    })
                  }
                />
              </div>
              <div className={styles.field}>
                <label htmlFor="">Location</label>
                <input
                  type="text"
                  value={profileData?.homeLocation}
                  onChange={(e) =>
                    setProfileData({
                      ...profileData,
                      homeLocation: e.target.value,
                    })
                  }
                />
              </div>
              <div className={styles.field}>
                <label htmlFor="">Residence Country</label>
                <input
                  type="text"
                  value={profileData?.residenceCountry}
                  onChange={(e) =>
                    setProfileData({
                      ...profileData,
                      residenceCountry: e.target.value,
                    })
                  }
                />
              </div>
              <div className={styles.field}>
                <label htmlFor="">Image</label>
                <img src={profileData?.image?.original?.src} alt="Image" />
                <input
                  type="text"
                  value={profileData?.image?.original?.src}
                  onChange={(e) =>
                    setProfileData({
                      ...profileData,
                      image: {
                        ...profileData?.image,
                        original: {
                          ...profileData?.image.original,
                          src: e.target.value,
                        },
                      },
                    })
                  }
                />
              </div>
              <button
                className={styles.button}
                onClick={updateProfile}
                style={{ width: "100%" }}
              >
                Update Profile
              </button>
            </div>
          )}
        </div>
      </main>
    </div>
  );
};

export default Home;
